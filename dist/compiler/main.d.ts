import { tCompilerExportContent } from './parser/base';
import { tFileNaming } from './resx';
export declare function preparseFile(siteName: string, sourceFilePath: string, targetPath: string, outputPath: string): Promise<tFileNaming>;
export declare function parseFile(fn: tFileNaming): void;
export declare function precompileFile(fn: tFileNaming): void;
export declare function compileFile(fn: tFileNaming, forceCompile?: boolean): Promise<{} | null>;
export declare function aftercompile(fn: tFileNaming, cExpContent: tCompilerExportContent): tCompilerExportContent;
export declare function prepersist(fn: tFileNaming, cExpContent: tCompilerExportContent): Promise<void>;
export declare function persist(fn: tFileNaming, cExpContent: tCompilerExportContent): Promise<void>;
export declare function afterpersist(fn: tFileNaming): Promise<void>;
